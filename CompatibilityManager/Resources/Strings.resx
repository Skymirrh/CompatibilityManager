<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColorMode" xml:space="preserve">
    <value>Reduced color mode</value>
  </data>
  <data name="ColorMode_COLOR16BIT" xml:space="preserve">
    <value>16-bit (65536) color</value>
  </data>
  <data name="ColorMode_COLOR256" xml:space="preserve">
    <value>8-bit (256) color</value>
  </data>
  <data name="CompatibilityMode" xml:space="preserve">
    <value>Run this program in compatibility mode for:</value>
  </data>
  <data name="CompatibilityMode_VISTARTM" xml:space="preserve">
    <value>Windows Vista</value>
  </data>
  <data name="CompatibilityMode_VISTASP1" xml:space="preserve">
    <value>Windows Vista (Service Pack 1)</value>
  </data>
  <data name="CompatibilityMode_VISTASP2" xml:space="preserve">
    <value>Windows Vista (Service Pack 2)</value>
  </data>
  <data name="CompatibilityMode_WIN7RTM" xml:space="preserve">
    <value>Windows 7</value>
  </data>
  <data name="CompatibilityMode_WIN8RTM" xml:space="preserve">
    <value>Windows 8</value>
  </data>
  <data name="CompatibilityMode_WIN95" xml:space="preserve">
    <value>Windows 95</value>
  </data>
  <data name="CompatibilityMode_WIN98" xml:space="preserve">
    <value>Windows 98</value>
  </data>
  <data name="CompatibilityMode_WINXPSP2" xml:space="preserve">
    <value>Windows XP (Service Pack 2)</value>
  </data>
  <data name="CompatibilityMode_WINXPSP3" xml:space="preserve">
    <value>Windows XP (Service Pack 3)</value>
  </data>
  <data name="DisableFullscreenOptimizations" xml:space="preserve">
    <value>Disable fullscreen optimizations</value>
  </data>
  <data name="DPIScaling" xml:space="preserve">
    <value>Override high DPI scaling behavior.
Scaling performed by:</value>
  </data>
  <data name="DPIScaling_DPIUNAWARE" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="DPIScaling_GDIDPISCALING" xml:space="preserve">
    <value>System (Enhanced)</value>
  </data>
  <data name="DPIScaling_HIGHDPIAWARE" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Resolution640x480" xml:space="preserve">
    <value>Run in 640 x 480 resolution</value>
  </data>
  <data name="RunAsAdministrator" xml:space="preserve">
    <value>Run this program as an administrator</value>
  </data>
  <data name="UnknownOSException" xml:space="preserve">
    <value>Couldn't detect OS version. {0}</value>
  </data>
  <data name="AddFiles" xml:space="preserve">
    <value>Add files</value>
  </data>
  <data name="AddFilesDescription" xml:space="preserve">
    <value>Pick one or more executables to add to the list</value>
  </data>
  <data name="AddFolder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="AddFolderDescription" xml:space="preserve">
    <value>Pick a folder to add to the list.
The application will recursively set flags on all executables found in this folder.
If you pick something stupid like "C:"... well, you have been warned! :)</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save selected to registry</value>
  </data>
  <data name="CatastrophicFailureException" xml:space="preserve">
    <value>This should never happen: if it happened, either all hell broke loose, a Windows update broke my stuff (fuck you too, Bill!), or (most likely) I'm just a very bad programmer. Please report ASAP!</value>
  </data>
  <data name="SaveWarning" xml:space="preserve">
    <value>This will save settings for each application to the registry.
If no settings have been selected for an application, it will be removed from the registry entries.

For Steam games, the global configuration changes will apply after restarting Steam.

Confirm?</value>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>Here be dragons!</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload selected from registry</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="UnselectAll" xml:space="preserve">
    <value>Unselect all</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear (remove from registry on save)</value>
  </data>
  <data name="Elevate" xml:space="preserve">
    <value>Show HKLM ("Change settings for all users")</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Compatibility Manager</value>
  </data>
  <data name="AggregatedSettings" xml:space="preserve">
    <value>Multi-selection settings</value>
  </data>
  <data name="ApplicationSettings" xml:space="preserve">
    <value>Application settings</value>
  </data>
  <data name="HKCU" xml:space="preserve">
    <value>Current User</value>
  </data>
  <data name="HKLM" xml:space="preserve">
    <value>Local Machine</value>
  </data>
  <data name="EnumTypeArgumentException" xml:space="preserve">
    <value>{0} must be an Enum type.</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...
We're in the middle of some calibrations.</value>
  </data>
  <data name="AdditionalFlags" xml:space="preserve">
    <value>Additional flags</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Regedit" xml:space="preserve">
    <value>Regedit</value>
  </data>
  <data name="ExportDescription" xml:space="preserve">
    <value />
  </data>
  <data name="ImportDescription" xml:space="preserve">
    <value>Pick a .reg file to import</value>
  </data>
  <data name="GlobalConfig" xml:space="preserve">
    <value>[Global Configuration]</value>
  </data>
</root>